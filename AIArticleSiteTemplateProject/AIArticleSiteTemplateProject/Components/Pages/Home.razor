@page "/"
@inject Services.PostService PostService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using Microsoft.AspNetCore.WebUtilities

<PageTitle>Home</PageTitle>


    <div class="categories-container">

        @if (categories != null)
        {
            <div class="category-list">
                @foreach (var category in categories)
                {
                    <div class="category">
                        <a href="/List/@category.CategoryId">@category.CategoryHashTag</a>
                    </div>
                }
            </div>
        }
    </div>

<div class="filter-container">
    <h3>Trending Posts</h3>
    <form method="get">
        <div class="form-group">
            <label>Day Amount: </label>
            <select @bind="TrendingPostSelectionDayAmount" name="trendingDays" class="sort-dropdown">
                <option value="7">Week</option>
                <option value="31">Month</option>
                <option value="45">45 Days</option>
                <option value="91">Three Months</option>
            </select>
        </div>
        <div class="form-group">
            <label>Number Amount: </label>
            <select @bind="TrendingPostSelectionNumberAmount" name="trendingAmount" class="sort-dropdown">
                <option value="9">9</option>
                <option value="15">15</option>
                <option value="30">30</option>
            </select>
        </div>
        <input type="submit" value="Apply" />
    </form>
</div>

@if (trendingPosts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="news-grid">
        @foreach (var post in trendingPosts)
        {
            <div class="news-card">
                <a href="/article/@post.PostId/@post.PostShortTitle">
                    <img src="@post.HeaderImage" alt="@post.PostTitle">
                </a>
                <div class="news-card-body">
                    <a href="/article/@post.PostId/@post.PostShortTitle">
                        <h5>@post.PostTitle</h5>
                    </a>
                    <p>@post.PostSysDate?.ToString("dddd MM-dd-yyyy h:mm tt")</p>
                </div>
            </div>
        }
    </div>
}

<div class="filter-container">
    <h3>Recent Posts</h3>
    <form method="get">
        <div>
            <label>Show: </label>
            <select @bind="RecentPostSelectingNumberAmount" name="posts" class="sort-dropdown">
                <option value="6">6</option>
                <option value="15">15</option>
                <option value="30">30</option>
            </select>
            <input type="submit" value="Apply" />
        </div>
    </form>
</div>

@if (recentPosts != null)
{
    <div class="news-grid">

        @foreach (var post in recentPosts)
        {
            <div class="news-card">
                <a href="/article/@post.PostId/@post.PostShortTitle">
                    <img src="@post.HeaderImage" alt="@post.PostTitle">
                </a>
                <div class="news-card-body">
                    <a href="/article/@post.PostId/@post.PostShortTitle">
                        <h5>@post.PostTitle</h5>
                    </a>
                    <p>@post.PostSysDate?.ToString("dddd MM-dd-yyyy h:mm tt")</p>
                </div>
            </div>
        }
    </div>
}
else
{
    <p><em>Loading...</em></p>
}
@code {
    private bool _hasAppliedFilters = false;
    private List<Post>? recentPosts;
    private List<Post>? trendingPosts;
    private List<Category>? categories;
    public string TrendingPostSelectionDayAmount { get; set; } = "7"; 
    public string TrendingPostSelectionNumberAmount { get; set; } = "9";
    public string RecentPostSelectingNumberAmount { get; set; } = "6"; 

    private bool _shouldRestoreScrollPosition = false;

    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(NavigationManager.Uri);
        var query = QueryHelpers.ParseQuery(uri.Query);

        if (query.TryGetValue("trendingDays", out var trendingDays))
        {
            TrendingPostSelectionDayAmount = trendingDays.FirstOrDefault() ?? TrendingPostSelectionDayAmount;
        }
        else
        {
            TrendingPostSelectionDayAmount = TrendingPostSelectionDayAmount; 
        }

        if (query.TryGetValue("trendingAmount", out var trendingAmount))
        {
            TrendingPostSelectionNumberAmount = trendingAmount.FirstOrDefault() ?? TrendingPostSelectionNumberAmount;
        }
        else
        {
            TrendingPostSelectionNumberAmount = TrendingPostSelectionNumberAmount;
        }

        if (query.TryGetValue("posts", out var posts))
        {
            RecentPostSelectingNumberAmount = posts.FirstOrDefault() ?? RecentPostSelectingNumberAmount;
        }
        else
        {
            RecentPostSelectingNumberAmount = RecentPostSelectingNumberAmount; 
        }

        // load our data
        recentPosts = await PostService.GetRecentPosts(Convert.ToInt32(RecentPostSelectingNumberAmount));
        trendingPosts = await PostService.GetTrendingPosts(Convert.ToInt32(TrendingPostSelectionNumberAmount), Convert.ToInt32(TrendingPostSelectionDayAmount));
        categories = await PostService.GetCategories();

        _shouldRestoreScrollPosition = query.ContainsKey("trendingDays") || query.ContainsKey("trendingAmount") || query.ContainsKey("posts");
    }

 
}
