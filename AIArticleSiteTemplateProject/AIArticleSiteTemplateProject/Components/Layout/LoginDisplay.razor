@implements IDisposable

@inject NavigationManager NavigationManager
<style>


</style>
<div class="top-row-LoginDisplay">

<AuthorizeView Roles="SuperAdmin,Admin">
    <Authorized>
        <NavLink class="logout-link" href="/admin" style="margin-right:auto;padding-left: 15px;">
           Administer
        </NavLink>
    </Authorized>
</AuthorizeView>

@* <AuthorizeView>
    <Authorized>
        <div class="">
                <a href="/Account/Manage" class="logout-link">Hello, @context.User.Identity?.Name!</a>
            <form method="post" action="Account/Logout" class="logout-form">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <button type="submit" class="logout-link">Log out</button>
                </form>
        </div>
    </Authorized>
    <NotAuthorized>
            <a class="logout-link" href="/Account/Register" style="margin-right:15px">Register</a>
            <a class="logout-link" href="/Account/Login">Log in</a>
    </NotAuthorized>
</AuthorizeView> *@

    <AuthorizeView>
        <Authorized>
            <div class="">
                <NavLink class="logout-link" href="Account/Manage">
                    <span class="logout-link" aria-hidden="true"></span> Manage Account
                </NavLink>
            </div>
            <div class="">
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <button type="submit" class="logout-link" style="margin-bottom:9px;">
                        <span class="logout-link" aria-hidden="true"></span> Logout
                    </button>
                </form>
            </div>

            <div class="">
                <NavLink class="link" href="/privacypolicy" style="margin-left:auto;">
                    Privacy Policy
                </NavLink>
            </div>
        </Authorized>
        <NotAuthorized>
            <div class="">
                <NavLink class="logout-link" href="Account/Register">
                    <span class="logout-link" aria-hidden="true"></span> Register
                </NavLink>
            </div>
            <div class="">
                <NavLink class="logout-link" href="Account/Login">
                    <span class="logout-link" aria-hidden="true"></span> Login
                </NavLink>
            </div>

            <div class="">
                <NavLink class="privacy-link" href="/privacypolicy" style="margin-left:auto;font-size:15px;">
                    Privacy Policy
                </NavLink>
            </div>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

